loop.c:	if (philo->num %2 == 0)
loop.c:		pthread_mutex_unlock(&(philo->r_fork));
loop.c:		pthread_mutex_unlock(philo->l_fork);
loop.c:		pthread_mutex_unlock(philo->l_fork);
loop.c:		pthread_mutex_unlock(&(philo->r_fork));
loop.c:	if (get_time() - philo->time >= philo->rules->death_time)
loop.c:	if (philo->num % 2 == 0)
loop.c:	pthread_mutex_lock(&philo->rules->mutex);
loop.c:	if (philo->died != 0|| philo->rules->die != 0)
loop.c:		return (pthread_mutex_unlock(&philo->rules->mutex), 1);
loop.c:	pthread_mutex_unlock(&philo->rules->mutex);
loop.c:	pthread_mutex_lock(&philo->rules->mutex);
loop.c:	philo->time = get_time();
loop.c:	if (philo->rules->die == 0)
loop.c:		printf("%ld %i is eating\n", philo->time, philo->num);
loop.c:	pthread_mutex_unlock(&philo->rules->mutex);
loop.c:	usleep(philo->rules->eat_time*1000);
loop.c:	philo->times_eaten += 1;
loop.c:		pthread_mutex_lock(&philo->rules->mutex);
loop.c:		if (philo->died != 0|| philo->rules->die != 0)
loop.c:			return (pthread_mutex_unlock(&philo->rules->mutex), 1);
loop.c:		pthread_mutex_unlock(&philo->rules->mutex);
loop.c:		if (philo->times_eaten == philo->rules->must_eat)
loop.c:			return (printf("%ld %i is full\n", get_time(), philo->num), 0);
loop.c:		pthread_mutex_lock(&philo->rules->mutex);
loop.c:		if (philo->died != 0|| philo->rules->die != 0)
loop.c:			return (pthread_mutex_unlock(&philo->rules->mutex), 1);
loop.c:		pthread_mutex_unlock(&philo->rules->mutex);
loop.c:		pthread_mutex_lock(&philo->rules->mutex);
loop.c:		if (philo->died != 0|| philo->rules->die != 0)
loop.c:			return (pthread_mutex_unlock(&philo->rules->mutex), 1);
loop.c:		pthread_mutex_unlock(&philo->rules->mutex);
loop.c:	if (philo->rules->n_philos == 1 && philo->rules->must_eat != 0)
loop.c:	pthread_mutex_lock(&philo->rules->mutex);
loop.c:	philo->time = get_time();
loop.c:	pthread_mutex_unlock(&philo->rules->mutex);
loop.c:	if (philo->num % 2 != 0)
philo_tsd.c:	pthread_mutex_lock(&philo->rules->mutex);
philo_tsd.c:	printf("%ld %i died\n", get_time(), philo->num);
philo_tsd.c:	philo->rules->die = 1;
philo_tsd.c:	pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	pthread_mutex_lock(&philo->rules->mutex);
philo_tsd.c:	printf("%ld %i has taken a fork\n", get_time(), philo->num);
philo_tsd.c:	usleep(philo->rules->death_time*1000);
philo_tsd.c:	printf("%ld %i died\n", get_time(), philo->num);
philo_tsd.c:	pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	pthread_mutex_lock(&philo->rules->mutex);
philo_tsd.c:	if (get_time() - philo->time >= philo->rules->death_time)
philo_tsd.c:		pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	if (philo->rules->die != 0)
philo_tsd.c:		printf("%ld %d is thinking\n", get_time(), philo->num);
philo_tsd.c:	pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	pthread_mutex_lock(&philo->rules->mutex);
philo_tsd.c:	if (philo->rules->die == 0)
philo_tsd.c:		printf("%ld %i is sleeping\n", get_time(), philo->num);
philo_tsd.c:	pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	usleep(philo->rules->sleep_time * 1000);
philo_tsd.c:	pthread_mutex_lock(&philo->rules->mutex);
philo_tsd.c:	if (get_time() - philo->time >= philo->rules->death_time)
philo_tsd.c:		pthread_mutex_unlock(&philo->rules->mutex);
philo_tsd.c:	pthread_mutex_unlock(&philo->rules->mutex);
